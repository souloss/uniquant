//! `ftl` Code, @generated by ftl-codegen. DO NOT EDIT MANUALLY.



#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
#[repr(i32)]
pub enum AppCode {
    /// Success
    Success = 0,
    /// Bad request
    BadRequest = 4000,
    /// Unauthorized
    Unauthorized = 4001,
    /// Forbidden
    Forbidden = 4003,
    /// Not found
    NotFound = 4004,
    /// Conflict
    Conflict = 4009,
    /// Validation Error
    Validation = 4010,
    /// Internal server error
    Internal = 5000,
    /// Database error
    Database = 5001,
}

impl AppCode {
    pub fn code(self) -> i32 {
        self as i32
    }

    pub fn category(self) -> &'static str {
        match self {
            Self::Success => "success",
            Self::BadRequest => "error",
            Self::Conflict => "error",
            Self::Database => "error",
            Self::Forbidden => "error",
            Self::Internal => "error",
            Self::NotFound => "error",
            Self::Unauthorized => "error",
            Self::Validation => "error",
        }
    }

    pub fn as_key(self) -> &'static str {
        match self {
            Self::Success => "success-success",
            Self::BadRequest => "error-bad_request",
            Self::Conflict => "error-conflict",
            Self::Database => "error-database",
            Self::Forbidden => "error-forbidden",
            Self::Internal => "error-internal",
            Self::NotFound => "error-not_found",
            Self::Unauthorized => "error-unauthorized",
            Self::Validation => "error-validation",
        }
    }

    pub fn description(self) -> &'static str {
        match self {
            Self::Success => "Success",
            Self::BadRequest => "Bad request",
            Self::Conflict => "Conflict",
            Self::Database => "Database error",
            Self::Forbidden => "Forbidden",
            Self::Internal => "Internal server error",
            Self::NotFound => "Not found",
            Self::Unauthorized => "Unauthorized",
            Self::Validation => "Validation Error",
        }
    }
}